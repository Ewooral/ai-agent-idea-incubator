// 'use server'
'use server';

/**
 * @fileOverview Refines an existing idea using AI to explore associated concepts and potential pivoting strategies.
 *
 * - refineIdea - A function that refines an idea using AI.
 * - RefineIdeaInput - The input type for the refineIdea function.
 * - RefineIdeaOutput - The return type for the refineIdea function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const RefineIdeaInputSchema = z.object({
  idea: z.string().describe('The original idea to be refined.'),
  marketData: z
    .string()
    .optional()
    .describe('Optional market data to inform the refinement process.'),
  focusKeywords: z
    .string()
    .optional()
    .describe('Optional keywords to focus the idea refinement.'),
});

export type RefineIdeaInput = z.infer<typeof RefineIdeaInputSchema>;

const RefineIdeaOutputSchema = z.object({
  refinedIdea: z.string().describe('The refined idea generated by the AI.'),
  associatedConcepts: z.array(z.string()).describe('Associated concepts explored by the AI.'),
  potentialPivots: z.array(z.string()).describe('Potential pivoting strategies based on market data.'),
});

export type RefineIdeaOutput = z.infer<typeof RefineIdeaOutputSchema>;

export async function refineIdea(input: RefineIdeaInput): Promise<RefineIdeaOutput> {
  return refineIdeaFlow(input);
}

const refineIdeaPrompt = ai.definePrompt({
  name: 'refineIdeaPrompt',
  input: {schema: RefineIdeaInputSchema},
  output: {schema: RefineIdeaOutputSchema},
  prompt: `You are an AI assistant tasked with refining existing ideas.

  The user will provide an idea, optional market data, and optional focus keywords.

  Based on the input, explore associated concepts and generate potential pivoting strategies.

  Original Idea: {{{idea}}}
  Market Data: {{{marketData}}}
  Focus Keywords: {{{focusKeywords}}}

  Refined Idea: (Provide a refined version of the original idea)
  Associated Concepts: (List associated concepts related to the idea)
  Potential Pivots: (Suggest potential pivoting strategies based on market data)
`,
});

const refineIdeaFlow = ai.defineFlow(
  {
    name: 'refineIdeaFlow',
    inputSchema: RefineIdeaInputSchema,
    outputSchema: RefineIdeaOutputSchema,
  },
  async input => {
    const {output} = await refineIdeaPrompt(input);
    return output!;
  }
);
